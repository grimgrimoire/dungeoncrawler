// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct PlayerProfileFlat : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static PlayerProfileFlat GetRootAsPlayerProfileFlat(ByteBuffer _bb) { return GetRootAsPlayerProfileFlat(_bb, new PlayerProfileFlat()); }
  public static PlayerProfileFlat GetRootAsPlayerProfileFlat(ByteBuffer _bb, PlayerProfileFlat obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool PlayerProfileFlatBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "FPCS"); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public PlayerProfileFlat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Gold { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Items { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetItemsBytes() { return __p.__vector_as_arraysegment(6); }

  public static Offset<PlayerProfileFlat> CreatePlayerProfileFlat(FlatBufferBuilder builder,
      int gold = 0,
      StringOffset itemsOffset = default(StringOffset)) {
    builder.StartObject(2);
    PlayerProfileFlat.AddItems(builder, itemsOffset);
    PlayerProfileFlat.AddGold(builder, gold);
    return PlayerProfileFlat.EndPlayerProfileFlat(builder);
  }

  public static void StartPlayerProfileFlat(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddGold(FlatBufferBuilder builder, int gold) { builder.AddInt(0, gold, 0); }
  public static void AddItems(FlatBufferBuilder builder, StringOffset itemsOffset) { builder.AddOffset(1, itemsOffset.Value, 0); }
  public static Offset<PlayerProfileFlat> EndPlayerProfileFlat(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<PlayerProfileFlat>(o);
  }
  public static void FinishPlayerProfileFlatBuffer(FlatBufferBuilder builder, Offset<PlayerProfileFlat> offset) { builder.Finish(offset.Value, "FPCS"); }
};

